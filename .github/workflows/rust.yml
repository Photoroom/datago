name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy # , cargo-llvm-cov

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        env:
          DATAROOM_API_KEY: ${{ secrets.DATAROOM_API_KEY }}
          DATAROOM_TEST_SOURCE: ${{ secrets.DATAROOM_TEST_SOURCE }}
          DATAROOM_API_URL: ${{ secrets.DATAROOM_API_URL }}

        run: cargo test --verbose
