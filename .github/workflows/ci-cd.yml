name: Push to PyPI

on:
  release:
    types: [published]

jobs:
  pypi-publish:
    name: Upload release to PyPI

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]

    environment:
      name: release
      url: https://pypi.org/p/datago
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy # , cargo-llvm-cov

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        env:
          DATAROOM_API_KEY: ${{ secrets.DATAROOM_API_KEY }}
          DATAROOM_TEST_SOURCE: ${{ secrets.DATAROOM_TEST_SOURCE }}
          DATAROOM_API_URL: ${{ secrets.DATAROOM_API_URL }}

        run: cargo test --verbose

      - name: Install maturin
        run: |
          python3 -m pip install maturin twine

      - name: Build and upload the package
        run: |
          maturin build -i python3.11 --release --target "x86_64-unknown-linux-gnu"
          cd target/wheels
          python3 -m pip install --user -v *.whl
          ls
          twine upload *.whl --repository-url https://pypi.org/p/datago

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
