name: Rust-py

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy # , cargo-llvm-cov

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.10"

      - name: Install maturin
        run: |
          python3 -m pip install maturin

      - name: Build and install python module
        run: |
          cd datago
          maturin build -i python3.11 --release --target "x86_64-unknown-linux-gnu"
          cd target/wheels
          python3 -m pip install --user -v *.whl

      - name: Run the python unit tests
        env:
          DATAROOM_API_KEY: ${{ secrets.DATAROOM_API_KEY }}
          DATAROOM_TEST_SOURCE: ${{ secrets.DATAROOM_TEST_SOURCE }}
          DATAROOM_API_URL: ${{ secrets.DATAROOM_API_URL }}

        run: |
          ls
      #     python3 -m pip install -r requirements-tests.txt
      #     pytest -xv python/*
